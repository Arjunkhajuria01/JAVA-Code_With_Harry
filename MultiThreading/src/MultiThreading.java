// MULTI-THREADING in java
/*
    ðŸ”¹ What is Multithreading?
    Thread = a small unit of a process.
    Multithreading = running multiple threads at the same time, so tasks can execute concurrently.
    ðŸ‘‰ Example:
    You are watching a YouTube video (main thread).
    At the same time, comments are loading, and ads are downloading (other threads).

    ðŸ”¹ Why Multithreading?
    Better use of CPU (does multiple tasks together).
    Faster execution when tasks are independent.
    Example: Game â†’ graphics thread, sound thread, user input thread.

        ðŸ”¹ How to Create Threads in Java
    There are two main ways:
    1. Extending Thread class
    2. Implementing Runnable interface


    ðŸ”¹ Useful Thread Methods
    start() â†’ starts the thread.
    run() â†’ contains the threadâ€™s job.
    sleep(ms) â†’ pause the thread.
    join() â†’ wait for another thread to finish.
    isAlive() â†’ check if thread is running.
    setPriority(int) â†’ set thread priority (1â€“10).


    ðŸ”¹ Thread Lifecycle
    A thread goes through these states:
    New â†’ created but not started.
    Runnable â†’ ready to run.
    Running â†’ currently executing.
    Waiting/Timed Waiting â†’ waiting for another thread or timer.
    Terminated â†’ finished execution.
     */